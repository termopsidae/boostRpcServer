{
	"id": "2f3ee217c6aabd15ad49207d99ee6405",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"sun5.0/sun.sol": {
				"content": "// Copyright 2021 The Hillstone Patners \n// and EntySquare Software Studio\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"./safemath.sol\";\ncontract SUN {\n    //participant's struct \n   struct Participant{\n        string name;\n        address pAddress;\n        address rAddress;\n        Pandora[] Pandoras;\n    }\n    struct Pandora{\n        uint8 id;\n        address owner;\n        uint256 power;\n        uint256 tOn;\n        uint8  state; //0.tOn 1.ready 2.closed \n    }\n    struct PowerReserve{\n        uint256 AllPower; //100%\n        uint256 StoragePower; //65%\n        uint256 StaticPower; //26%\n        uint256 FlowPower; //6%\n        uint256 AspiratedPower; //1%\n        uint256 SalvationalPower; //2%\n    }\n    using SafeMath for uint256;\n    address manager;\n    PowerReserve public pr;\n    uint256 AccumulatePower;\n    constructor(\n        address holder)  public {\n        manager = holder;\n        pr.AllPower = 0 ;\n        pr.StoragePower = 0 ;\n        pr.StaticPower = 0 ;\n        pr.FlowPower = 0 ;\n        pr.AspiratedPower = 0 ;\n        pr.SalvationalPower = 0 ;\n        // nextWDLPoolAmount = 0;\n        // nextScorePoolAmount = 0;\n    }\n    function restartReserve() internal returns (bool) {\n        \n    }\n    function Aspirated(address toAddress,uint256 amount)external onlyManager payable returns(bool){\n            address payable toAddress_address = payable(toAddress);\n            toAddress_address.transfer(amount);\n            return true;\n    }\n\n    receive() external payable {\n         \n   }\n    // @notice only manager can do in this condition\n    modifier onlyManager() { \n        require(\n            msg.sender == manager,\n            \"Only owner can call this.\"\n        );\n        _;\n    }\n}"
			},
			"sun5.0/safemath.sol": {
				"content": "pragma solidity >=0.8.0 <0.9.0;\n\n // SPDX-License-Identifier: GPL-3.0\nlibrary SafeMath {\n   \n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n \n        uint256 c = a * b;\n        require(c / a == b);\n        return c;\n    }\n \n\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0);\n        uint256 c = a / b;\n        return c;\n    }\n \n\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a);\n        uint256 c = a - b;\n \n        return c;\n    }\n \n\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a);\n \n        return c;\n    }\n \n  \n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b != 0);\n        return a % b;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"sun5.0/safemath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sun5.0/safemath.sol\":70:893  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"sun5.0/safemath.sol\":70:893  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220514bde6a201feb602bf381266349e902dafaeb0e3a2709021a1d092ef55856b464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220514bde6a201feb602bf381266349e902dafaeb0e3a2709021a1d092ef55856b464736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0x4B 0xDE PUSH11 0x201FEB602BF381266349E9 MUL 0xDA STATICCALL 0xEB 0xE GASPRICE 0x27 MULMOD MUL BYTE SAR MULMOD 0x2E CREATE2 PC JUMP 0xB4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:823:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220514bde6a201feb602bf381266349e902dafaeb0e3a2709021a1d092ef55856b464736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0x4B 0xDE PUSH11 0x201FEB602BF381266349E9 MUL 0xDA STATICCALL 0xEB 0xE GASPRICE 0x27 MULMOD MUL BYTE SAR MULMOD 0x2E CREATE2 PC JUMP 0xB4 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "70:823:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 70,
									"end": 893,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 70,
									"end": 893,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220514bde6a201feb602bf381266349e902dafaeb0e3a2709021a1d092ef55856b464736f6c63430008070033",
									".code": [
										{
											"begin": 70,
											"end": 893,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 70,
											"end": 893,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 70,
											"end": 893,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70,
											"end": 893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70,
											"end": 893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70,
											"end": 893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70,
											"end": 893,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sun5.0/safemath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sun5.0/safemath.sol\":{\"keccak256\":\"0x46b3dcb24f0450aaa98e27effca017e7ebe3bc8bb83a062c5d0eef491a106bd9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://75f1661dc6ea3a3573931d3a2c80f68b61e791e3a601ef76f1ec343f985796f3\",\"dweb:/ipfs/QmVk6n7UNYGT5Kr4UPgcRufAVRA6Uv7NnKntz1gjPp7Sfz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"sun5.0/sun.sol": {
				"SUN": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "toAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Aspirated",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pr",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "AllPower",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "StoragePower",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "StaticPower",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "FlowPower",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "AspiratedPower",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "SalvationalPower",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sun5.0/sun.sol\":728:2315  contract SUN {... */\n  mstore(0x40, 0x80)\n    /* \"sun5.0/sun.sol\":1417:1743  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"sun5.0/sun.sol\":1482:1488  holder */\n  dup1\n    /* \"sun5.0/sun.sol\":1472:1479  manager */\n  0x00\n  dup1\n    /* \"sun5.0/sun.sol\":1472:1488  manager = holder */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"sun5.0/sun.sol\":1512:1513  0 */\n  0x00\n    /* \"sun5.0/sun.sol\":1498:1500  pr */\n  0x01\n    /* \"sun5.0/sun.sol\":1498:1509  pr.AllPower */\n  0x00\n  add\n    /* \"sun5.0/sun.sol\":1498:1513  pr.AllPower = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sun5.0/sun.sol\":1542:1543  0 */\n  0x00\n    /* \"sun5.0/sun.sol\":1524:1526  pr */\n  0x01\n    /* \"sun5.0/sun.sol\":1524:1539  pr.StoragePower */\n  dup1\n  add\n    /* \"sun5.0/sun.sol\":1524:1543  pr.StoragePower = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sun5.0/sun.sol\":1571:1572  0 */\n  0x00\n    /* \"sun5.0/sun.sol\":1554:1556  pr */\n  0x01\n    /* \"sun5.0/sun.sol\":1554:1568  pr.StaticPower */\n  0x02\n  add\n    /* \"sun5.0/sun.sol\":1554:1572  pr.StaticPower = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sun5.0/sun.sol\":1598:1599  0 */\n  0x00\n    /* \"sun5.0/sun.sol\":1583:1585  pr */\n  0x01\n    /* \"sun5.0/sun.sol\":1583:1595  pr.FlowPower */\n  0x03\n  add\n    /* \"sun5.0/sun.sol\":1583:1599  pr.FlowPower = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sun5.0/sun.sol\":1630:1631  0 */\n  0x00\n    /* \"sun5.0/sun.sol\":1610:1612  pr */\n  0x01\n    /* \"sun5.0/sun.sol\":1610:1627  pr.AspiratedPower */\n  0x04\n  add\n    /* \"sun5.0/sun.sol\":1610:1631  pr.AspiratedPower = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sun5.0/sun.sol\":1664:1665  0 */\n  0x00\n    /* \"sun5.0/sun.sol\":1642:1644  pr */\n  0x01\n    /* \"sun5.0/sun.sol\":1642:1661  pr.SalvationalPower */\n  0x05\n  add\n    /* \"sun5.0/sun.sol\":1642:1665  pr.SalvationalPower = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sun5.0/sun.sol\":1417:1743  constructor(... */\n  pop\n    /* \"sun5.0/sun.sol\":728:2315  contract SUN {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"sun5.0/sun.sol\":728:2315  contract SUN {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sun5.0/sun.sol\":728:2315  contract SUN {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1509c42a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x46f188e4\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"sun5.0/sun.sol\":1360:1382  PowerReserve public pr */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sun5.0/sun.sol\":1819:2061  function Aspirated(address toAddress,uint256 amount)external onlyManager payable returns(bool){... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sun5.0/sun.sol\":1360:1382  PowerReserve public pr */\n    tag_9:\n      0x01\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"sun5.0/sun.sol\":1819:2061  function Aspirated(address toAddress,uint256 amount)external onlyManager payable returns(bool){... */\n    tag_15:\n        /* \"sun5.0/sun.sol\":1908:1912  bool */\n      0x00\n        /* \"sun5.0/sun.sol\":2237:2244  manager */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sun5.0/sun.sol\":2223:2244  msg.sender == manager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sun5.0/sun.sol\":2223:2233  msg.sender */\n      caller\n        /* \"sun5.0/sun.sol\":2223:2244  msg.sender == manager */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"sun5.0/sun.sol\":2202:2295  require(... */\n      tag_19\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_19:\n        /* \"sun5.0/sun.sol\":1927:1960  address payable toAddress_address */\n      0x00\n        /* \"sun5.0/sun.sol\":1971:1980  toAddress */\n      dup4\n        /* \"sun5.0/sun.sol\":1927:1981  address payable toAddress_address = payable(toAddress) */\n      swap1\n      pop\n        /* \"sun5.0/sun.sol\":1995:2012  toAddress_address */\n      dup1\n        /* \"sun5.0/sun.sol\":1995:2021  toAddress_address.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sun5.0/sun.sol\":1995:2029  toAddress_address.transfer(amount) */\n      0x08fc\n        /* \"sun5.0/sun.sol\":2022:2028  amount */\n      dup5\n        /* \"sun5.0/sun.sol\":1995:2029  toAddress_address.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n        /* \"sun5.0/sun.sol\":2050:2054  true */\n      0x01\n        /* \"sun5.0/sun.sol\":2043:2054  return true */\n      swap2\n      pop\n      pop\n        /* \"sun5.0/sun.sol\":1819:2061  function Aspirated(address toAddress,uint256 amount)external onlyManager payable returns(bool){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_26:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_28\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_30:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_32\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_33\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:771   */\n    tag_14:\n        /* \"#utility.yul\":365:371   */\n      0x00\n        /* \"#utility.yul\":373:379   */\n      dup1\n        /* \"#utility.yul\":422:424   */\n      0x40\n        /* \"#utility.yul\":410:419   */\n      dup4\n        /* \"#utility.yul\":401:408   */\n      dup6\n        /* \"#utility.yul\":397:420   */\n      sub\n        /* \"#utility.yul\":393:425   */\n      slt\n        /* \"#utility.yul\":390:509   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":428:507   */\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":390:509   */\n    tag_35:\n        /* \"#utility.yul\":548:549   */\n      0x00\n        /* \"#utility.yul\":573:626   */\n      tag_38\n        /* \"#utility.yul\":618:625   */\n      dup6\n        /* \"#utility.yul\":609:615   */\n      dup3\n        /* \"#utility.yul\":598:607   */\n      dup7\n        /* \"#utility.yul\":594:616   */\n      add\n        /* \"#utility.yul\":573:626   */\n      tag_26\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":563:626   */\n      swap3\n      pop\n        /* \"#utility.yul\":519:636   */\n      pop\n        /* \"#utility.yul\":675:677   */\n      0x20\n        /* \"#utility.yul\":701:754   */\n      tag_39\n        /* \"#utility.yul\":746:753   */\n      dup6\n        /* \"#utility.yul\":737:743   */\n      dup3\n        /* \"#utility.yul\":726:735   */\n      dup7\n        /* \"#utility.yul\":722:744   */\n      add\n        /* \"#utility.yul\":701:754   */\n      tag_30\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":691:754   */\n      swap2\n      pop\n        /* \"#utility.yul\":646:764   */\n      pop\n        /* \"#utility.yul\":297:771   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":777:886   */\n    tag_40:\n        /* \"#utility.yul\":858:879   */\n      tag_42\n        /* \"#utility.yul\":873:878   */\n      dup2\n        /* \"#utility.yul\":858:879   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":853:856   */\n      dup3\n        /* \"#utility.yul\":846:880   */\n      mstore\n        /* \"#utility.yul\":777:886   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":892:1258   */\n    tag_44:\n        /* \"#utility.yul\":1034:1037   */\n      0x00\n        /* \"#utility.yul\":1055:1122   */\n      tag_46\n        /* \"#utility.yul\":1119:1121   */\n      0x19\n        /* \"#utility.yul\":1114:1117   */\n      dup4\n        /* \"#utility.yul\":1055:1122   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1048:1122   */\n      swap2\n      pop\n        /* \"#utility.yul\":1131:1224   */\n      tag_48\n        /* \"#utility.yul\":1220:1223   */\n      dup3\n        /* \"#utility.yul\":1131:1224   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1249:1251   */\n      0x20\n        /* \"#utility.yul\":1244:1247   */\n      dup3\n        /* \"#utility.yul\":1240:1252   */\n      add\n        /* \"#utility.yul\":1233:1252   */\n      swap1\n      pop\n        /* \"#utility.yul\":892:1258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1264:1382   */\n    tag_50:\n        /* \"#utility.yul\":1351:1375   */\n      tag_52\n        /* \"#utility.yul\":1369:1374   */\n      dup2\n        /* \"#utility.yul\":1351:1375   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1346:1349   */\n      dup3\n        /* \"#utility.yul\":1339:1376   */\n      mstore\n        /* \"#utility.yul\":1264:1382   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1388:1598   */\n    tag_17:\n        /* \"#utility.yul\":1475:1479   */\n      0x00\n        /* \"#utility.yul\":1513:1515   */\n      0x20\n        /* \"#utility.yul\":1502:1511   */\n      dup3\n        /* \"#utility.yul\":1498:1516   */\n      add\n        /* \"#utility.yul\":1490:1516   */\n      swap1\n      pop\n        /* \"#utility.yul\":1526:1591   */\n      tag_55\n        /* \"#utility.yul\":1588:1589   */\n      0x00\n        /* \"#utility.yul\":1577:1586   */\n      dup4\n        /* \"#utility.yul\":1573:1590   */\n      add\n        /* \"#utility.yul\":1564:1570   */\n      dup5\n        /* \"#utility.yul\":1526:1591   */\n      tag_40\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1388:1598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1604:2023   */\n    tag_21:\n        /* \"#utility.yul\":1770:1774   */\n      0x00\n        /* \"#utility.yul\":1808:1810   */\n      0x20\n        /* \"#utility.yul\":1797:1806   */\n      dup3\n        /* \"#utility.yul\":1793:1811   */\n      add\n        /* \"#utility.yul\":1785:1811   */\n      swap1\n      pop\n        /* \"#utility.yul\":1857:1866   */\n      dup2\n        /* \"#utility.yul\":1851:1855   */\n      dup2\n        /* \"#utility.yul\":1847:1867   */\n      sub\n        /* \"#utility.yul\":1843:1844   */\n      0x00\n        /* \"#utility.yul\":1832:1841   */\n      dup4\n        /* \"#utility.yul\":1828:1845   */\n      add\n        /* \"#utility.yul\":1821:1868   */\n      mstore\n        /* \"#utility.yul\":1885:2016   */\n      tag_57\n        /* \"#utility.yul\":2011:2015   */\n      dup2\n        /* \"#utility.yul\":1885:2016   */\n      tag_44\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1877:2016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1604:2023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2804   */\n    tag_11:\n        /* \"#utility.yul\":2262:2266   */\n      0x00\n        /* \"#utility.yul\":2300:2303   */\n      0xc0\n        /* \"#utility.yul\":2289:2298   */\n      dup3\n        /* \"#utility.yul\":2285:2304   */\n      add\n        /* \"#utility.yul\":2277:2304   */\n      swap1\n      pop\n        /* \"#utility.yul\":2314:2385   */\n      tag_59\n        /* \"#utility.yul\":2382:2383   */\n      0x00\n        /* \"#utility.yul\":2371:2380   */\n      dup4\n        /* \"#utility.yul\":2367:2384   */\n      add\n        /* \"#utility.yul\":2358:2364   */\n      dup10\n        /* \"#utility.yul\":2314:2385   */\n      tag_50\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2395:2467   */\n      tag_60\n        /* \"#utility.yul\":2463:2465   */\n      0x20\n        /* \"#utility.yul\":2452:2461   */\n      dup4\n        /* \"#utility.yul\":2448:2466   */\n      add\n        /* \"#utility.yul\":2439:2445   */\n      dup9\n        /* \"#utility.yul\":2395:2467   */\n      tag_50\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2477:2549   */\n      tag_61\n        /* \"#utility.yul\":2545:2547   */\n      0x40\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2548   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup8\n        /* \"#utility.yul\":2477:2549   */\n      tag_50\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2559:2631   */\n      tag_62\n        /* \"#utility.yul\":2627:2629   */\n      0x60\n        /* \"#utility.yul\":2616:2625   */\n      dup4\n        /* \"#utility.yul\":2612:2630   */\n      add\n        /* \"#utility.yul\":2603:2609   */\n      dup7\n        /* \"#utility.yul\":2559:2631   */\n      tag_50\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2641:2714   */\n      tag_63\n        /* \"#utility.yul\":2709:2712   */\n      0x80\n        /* \"#utility.yul\":2698:2707   */\n      dup4\n        /* \"#utility.yul\":2694:2713   */\n      add\n        /* \"#utility.yul\":2685:2691   */\n      dup6\n        /* \"#utility.yul\":2641:2714   */\n      tag_50\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2724:2797   */\n      tag_64\n        /* \"#utility.yul\":2792:2795   */\n      0xa0\n        /* \"#utility.yul\":2781:2790   */\n      dup4\n        /* \"#utility.yul\":2777:2796   */\n      add\n        /* \"#utility.yul\":2768:2774   */\n      dup5\n        /* \"#utility.yul\":2724:2797   */\n      tag_50\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2029:2804   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2891:3060   */\n    tag_47:\n        /* \"#utility.yul\":2975:2986   */\n      0x00\n        /* \"#utility.yul\":3009:3015   */\n      dup3\n        /* \"#utility.yul\":3004:3007   */\n      dup3\n        /* \"#utility.yul\":2997:3016   */\n      mstore\n        /* \"#utility.yul\":3049:3053   */\n      0x20\n        /* \"#utility.yul\":3044:3047   */\n      dup3\n        /* \"#utility.yul\":3040:3054   */\n      add\n        /* \"#utility.yul\":3025:3054   */\n      swap1\n      pop\n        /* \"#utility.yul\":2891:3060   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3066:3162   */\n    tag_68:\n        /* \"#utility.yul\":3103:3110   */\n      0x00\n        /* \"#utility.yul\":3132:3156   */\n      tag_70\n        /* \"#utility.yul\":3150:3155   */\n      dup3\n        /* \"#utility.yul\":3132:3156   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":3121:3156   */\n      swap1\n      pop\n        /* \"#utility.yul\":3066:3162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3168:3258   */\n    tag_43:\n        /* \"#utility.yul\":3202:3209   */\n      0x00\n        /* \"#utility.yul\":3245:3250   */\n      dup2\n        /* \"#utility.yul\":3238:3251   */\n      iszero\n        /* \"#utility.yul\":3231:3252   */\n      iszero\n        /* \"#utility.yul\":3220:3252   */\n      swap1\n      pop\n        /* \"#utility.yul\":3168:3258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3390   */\n    tag_71:\n        /* \"#utility.yul\":3301:3308   */\n      0x00\n        /* \"#utility.yul\":3341:3383   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3334:3339   */\n      dup3\n        /* \"#utility.yul\":3330:3384   */\n      and\n        /* \"#utility.yul\":3319:3384   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3390   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3396:3473   */\n    tag_53:\n        /* \"#utility.yul\":3433:3440   */\n      0x00\n        /* \"#utility.yul\":3462:3467   */\n      dup2\n        /* \"#utility.yul\":3451:3467   */\n      swap1\n      pop\n        /* \"#utility.yul\":3396:3473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3602:3719   */\n    tag_37:\n        /* \"#utility.yul\":3711:3712   */\n      0x00\n        /* \"#utility.yul\":3708:3709   */\n      dup1\n        /* \"#utility.yul\":3701:3713   */\n      revert\n        /* \"#utility.yul\":3725:3900   */\n    tag_49:\n        /* \"#utility.yul\":3865:3892   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732e00000000000000\n        /* \"#utility.yul\":3861:3862   */\n      0x00\n        /* \"#utility.yul\":3853:3859   */\n      dup3\n        /* \"#utility.yul\":3849:3863   */\n      add\n        /* \"#utility.yul\":3842:3893   */\n      mstore\n        /* \"#utility.yul\":3725:3900   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3906:4028   */\n    tag_29:\n        /* \"#utility.yul\":3979:4003   */\n      tag_80\n        /* \"#utility.yul\":3997:4002   */\n      dup2\n        /* \"#utility.yul\":3979:4003   */\n      tag_68\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3972:3977   */\n      dup2\n        /* \"#utility.yul\":3969:4004   */\n      eq\n        /* \"#utility.yul\":3959:4022   */\n      tag_81\n      jumpi\n        /* \"#utility.yul\":4018:4019   */\n      0x00\n        /* \"#utility.yul\":4015:4016   */\n      dup1\n        /* \"#utility.yul\":4008:4020   */\n      revert\n        /* \"#utility.yul\":3959:4022   */\n    tag_81:\n        /* \"#utility.yul\":3906:4028   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4034:4156   */\n    tag_33:\n        /* \"#utility.yul\":4107:4131   */\n      tag_83\n        /* \"#utility.yul\":4125:4130   */\n      dup2\n        /* \"#utility.yul\":4107:4131   */\n      tag_53\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":4100:4105   */\n      dup2\n        /* \"#utility.yul\":4097:4132   */\n      eq\n        /* \"#utility.yul\":4087:4150   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":4146:4147   */\n      0x00\n        /* \"#utility.yul\":4143:4144   */\n      dup1\n        /* \"#utility.yul\":4136:4148   */\n      revert\n        /* \"#utility.yul\":4087:4150   */\n    tag_84:\n        /* \"#utility.yul\":4034:4156   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220508d0428ee77e9d84373e5dcc13af390789356beacfdb353d0c532ca9f50f8fb64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:2",
														"type": ""
													}
												],
												"src": "696:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:2"
															},
															"nodeType": "YulIf",
															"src": "1127:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:2",
														"type": ""
													}
												],
												"src": "1074:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610535380380610535833981810160405281019061003291906100ce565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060016000018190555060006001800181905550600060016002018190555060006001600301819055506000600160040181905550600060016005018190555050610149565b6000815190506100c881610132565b92915050565b6000602082840312156100e4576100e361012d565b5b60006100f2848285016100b9565b91505092915050565b60006101068261010d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61013b816100fb565b811461014657600080fd5b50565b6103dd806101586000396000f3fe60806040526004361061002d5760003560e01c80631509c42a1461003957806346f188e41461006957610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e610099565b60405161006096959493929190610291565b60405180910390f35b610083600480360381019061007e91906101d5565b6100c3565b6040516100909190610256565b60405180910390f35b60018060000154908060010154908060020154908060030154908060040154908060050154905086565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014b90610271565b60405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f1935050505015801561019f573d6000803e3d6000fd5b50600191505092915050565b6000813590506101ba81610379565b92915050565b6000813590506101cf81610390565b92915050565b600080604083850312156101ec576101eb61034b565b5b60006101fa858286016101ab565b925050602061020b858286016101c0565b9150509250929050565b61021e81610315565b82525050565b60006102316019836102f2565b915061023c82610350565b602082019050919050565b61025081610341565b82525050565b600060208201905061026b6000830184610215565b92915050565b6000602082019050818103600083015261028a81610224565b9050919050565b600060c0820190506102a66000830189610247565b6102b36020830188610247565b6102c06040830187610247565b6102cd6060830186610247565b6102da6080830185610247565b6102e760a0830184610247565b979650505050505050565b600082825260208201905092915050565b600061030e82610321565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f6e6c79206f776e65722063616e2063616c6c20746869732e00000000000000600082015250565b61038281610303565b811461038d57600080fd5b50565b61039981610341565b81146103a457600080fd5b5056fea2646970667358221220508d0428ee77e9d84373e5dcc13af390789356beacfdb353d0c532ca9f50f8fb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x535 CODESIZE SUB DUP1 PUSH2 0x535 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 DUP1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x149 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8 DUP2 PUSH2 0x132 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE4 JUMPI PUSH2 0xE3 PUSH2 0x12D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF2 DUP5 DUP3 DUP6 ADD PUSH2 0xB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x106 DUP3 PUSH2 0x10D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B DUP2 PUSH2 0xFB JUMP JUMPDEST DUP2 EQ PUSH2 0x146 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3DD DUP1 PUSH2 0x158 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1509C42A EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x46F188E4 EQ PUSH2 0x69 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x83 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BA DUP2 PUSH2 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF DUP2 PUSH2 0x390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC JUMPI PUSH2 0x1EB PUSH2 0x34B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FA DUP6 DUP3 DUP7 ADD PUSH2 0x1AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B DUP6 DUP3 DUP7 ADD PUSH2 0x1C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E DUP2 PUSH2 0x315 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231 PUSH1 0x19 DUP4 PUSH2 0x2F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23C DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x250 DUP2 PUSH2 0x341 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2A6 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2C0 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2CD PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x247 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP3 PUSH2 0x321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x382 DUP2 PUSH2 0x303 JUMP JUMPDEST DUP2 EQ PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x399 DUP2 PUSH2 0x341 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP DUP14 DIV 0x28 0xEE PUSH24 0xE9D84373E5DCC13AF390789356BEACFDB353D0C532CA9F50 0xF8 0xFB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "728:1587:1:-:0;;;1417:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1482:6;1472:7;;:16;;;;;;;;;;;;;;;;;;1512:1;1498:2;:11;;:15;;;;1542:1;1524:2;:15;;:19;;;;1571:1;1554:2;:14;;:18;;;;1598:1;1583:2;:12;;:16;;;;1630:1;1610:2;:17;;:21;;;;1664:1;1642:2;:19;;:23;;;;1417:326;728:1587;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;728:1587:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Aspirated_254": {
									"entryPoint": 195,
									"id": 254,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_258": {
									"entryPoint": null,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pr_173": {
									"entryPoint": 153,
									"id": 173,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 912,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4159:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													}
												],
												"src": "152:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "380:391:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "426:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "428:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "428:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "428:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "401:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "410:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "397:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "397:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "422:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "393:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:32:2"
															},
															"nodeType": "YulIf",
															"src": "390:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "519:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "534:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "538:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "563:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "598:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "609:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "594:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "594:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "618:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "573:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "573:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "563:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "646:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "661:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "675:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "665:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "691:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "726:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "737:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "746:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "701:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "691:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "342:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "353:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "365:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "373:6:2",
														"type": ""
													}
												],
												"src": "297:474:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "836:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "853:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "873:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "858:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "858:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "846:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "846:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "846:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "824:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "831:3:2",
														"type": ""
													}
												],
												"src": "777:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1038:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1048:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1114:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1119:2:2",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1055:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1055:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1048:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1220:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572",
																	"nodeType": "YulIdentifier",
																	"src": "1131:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1131:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1233:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1244:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1249:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1240:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1233:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1026:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1034:3:2",
														"type": ""
													}
												],
												"src": "892:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1329:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1346:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1369:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1351:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1351:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1339:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1317:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1324:3:2",
														"type": ""
													}
												],
												"src": "1264:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1480:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1490:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1502:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1513:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1498:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1490:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1564:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1577:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1588:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1573:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1573:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1526:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1526:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1452:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1464:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1475:4:2",
														"type": ""
													}
												],
												"src": "1388:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1775:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1785:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1797:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1793:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1793:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1785:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1832:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1843:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1828:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1828:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1851:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1857:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1847:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1847:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1821:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1877:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2011:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1885:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1885:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1877:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1755:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1770:4:2",
														"type": ""
													}
												],
												"src": "1604:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2267:537:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2277:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2289:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2300:3:2",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2285:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2285:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2277:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2358:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2371:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2382:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2367:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2367:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2314:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2314:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2314:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2452:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2463:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2395:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2395:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2545:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2530:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2477:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2477:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2603:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2616:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2627:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2612:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2612:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2559:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2685:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2698:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2709:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2694:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2694:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2641:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2641:73:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2641:73:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "2768:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2781:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2792:3:2",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2777:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2777:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2724:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:73:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2724:73:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2199:9:2",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2211:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2219:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2227:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2235:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2243:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2251:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2262:4:2",
														"type": ""
													}
												],
												"src": "2029:775:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2850:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2860:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2876:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2870:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2843:6:2",
														"type": ""
													}
												],
												"src": "2810:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2987:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3004:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3009:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2997:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2997:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2997:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3025:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3044:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3049:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3025:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2959:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2964:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2975:11:2",
														"type": ""
													}
												],
												"src": "2891:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3111:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3121:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3150:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3132:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3121:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3103:7:2",
														"type": ""
													}
												],
												"src": "3066:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3210:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3220:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3245:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3238:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3238:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3231:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3231:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3220:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3192:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3202:7:2",
														"type": ""
													}
												],
												"src": "3168:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3309:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3319:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3334:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3341:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3319:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3291:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3301:7:2",
														"type": ""
													}
												],
												"src": "3264:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3441:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3451:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3462:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3451:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3423:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3433:7:2",
														"type": ""
													}
												],
												"src": "3396:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3568:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3585:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3588:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3578:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3578:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3578:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "3479:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3691:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3708:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3711:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3701:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3701:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3701:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "3602:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3831:69:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3861:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:14:2"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3865:27:2",
																		"type": "",
																		"value": "Only owner can call this."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3842:51:2"
														}
													]
												},
												"name": "store_literal_in_memory_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3823:6:2",
														"type": ""
													}
												],
												"src": "3725:175:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3949:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4006:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4015:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4018:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4008:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4008:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4008:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3972:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3997:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3979:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3979:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3969:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3969:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3962:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3962:43:2"
															},
															"nodeType": "YulIf",
															"src": "3959:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3942:5:2",
														"type": ""
													}
												],
												"src": "3906:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4077:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4134:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4143:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4136:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4136:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4136:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4100:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4125:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4107:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4107:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4097:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4097:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4090:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:43:2"
															},
															"nodeType": "YulIf",
															"src": "4087:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4070:5:2",
														"type": ""
													}
												],
												"src": "4034:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call this.\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002d5760003560e01c80631509c42a1461003957806346f188e41461006957610034565b3661003457005b600080fd5b34801561004557600080fd5b5061004e610099565b60405161006096959493929190610291565b60405180910390f35b610083600480360381019061007e91906101d5565b6100c3565b6040516100909190610256565b60405180910390f35b60018060000154908060010154908060020154908060030154908060040154908060050154905086565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610154576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161014b90610271565b60405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff166108fc849081150290604051600060405180830381858888f1935050505015801561019f573d6000803e3d6000fd5b50600191505092915050565b6000813590506101ba81610379565b92915050565b6000813590506101cf81610390565b92915050565b600080604083850312156101ec576101eb61034b565b5b60006101fa858286016101ab565b925050602061020b858286016101c0565b9150509250929050565b61021e81610315565b82525050565b60006102316019836102f2565b915061023c82610350565b602082019050919050565b61025081610341565b82525050565b600060208201905061026b6000830184610215565b92915050565b6000602082019050818103600083015261028a81610224565b9050919050565b600060c0820190506102a66000830189610247565b6102b36020830188610247565b6102c06040830187610247565b6102cd6060830186610247565b6102da6080830185610247565b6102e760a0830184610247565b979650505050505050565b600082825260208201905092915050565b600061030e82610321565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f6e6c79206f776e65722063616e2063616c6c20746869732e00000000000000600082015250565b61038281610303565b811461038d57600080fd5b50565b61039981610341565b81146103a457600080fd5b5056fea2646970667358221220508d0428ee77e9d84373e5dcc13af390789356beacfdb353d0c532ca9f50f8fb64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1509C42A EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x46F188E4 EQ PUSH2 0x69 JUMPI PUSH2 0x34 JUMP JUMPDEST CALLDATASIZE PUSH2 0x34 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x60 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x83 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x90 SWAP2 SWAP1 PUSH2 0x256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x154 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14B SWAP1 PUSH2 0x271 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP5 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x19F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BA DUP2 PUSH2 0x379 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CF DUP2 PUSH2 0x390 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EC JUMPI PUSH2 0x1EB PUSH2 0x34B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FA DUP6 DUP3 DUP7 ADD PUSH2 0x1AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x20B DUP6 DUP3 DUP7 ADD PUSH2 0x1C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x21E DUP2 PUSH2 0x315 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231 PUSH1 0x19 DUP4 PUSH2 0x2F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x23C DUP3 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x250 DUP2 PUSH2 0x341 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x215 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2A6 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2B3 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2C0 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2CD PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2DA PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x247 JUMP JUMPDEST PUSH2 0x2E7 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x247 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30E DUP3 PUSH2 0x321 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732E00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x382 DUP2 PUSH2 0x303 JUMP JUMPDEST DUP2 EQ PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x399 DUP2 PUSH2 0x341 JUMP JUMPDEST DUP2 EQ PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP DUP14 DIV 0x28 0xEE PUSH24 0xE9D84373E5DCC13AF390789356BEACFDB353D0C532CA9F50 0xF8 0xFB PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "728:1587:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:22;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;1819:242;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1360:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1819:242::-;1908:4;2237:7;;;;;;;;;;;2223:21;;:10;:21;;;2202:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1927:33:::1;1971:9;1927:54;;1995:17;:26;;:34;2022:6;1995:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2050:4;2043:11;;;1819:242:::0;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:474::-;365:6;373;422:2;410:9;401:7;397:23;393:32;390:119;;;428:79;;:::i;:::-;390:119;548:1;573:53;618:7;609:6;598:9;594:22;573:53;:::i;:::-;563:63;;519:117;675:2;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;646:118;297:474;;;;;:::o;777:109::-;858:21;873:5;858:21;:::i;:::-;853:3;846:34;777:109;;:::o;892:366::-;1034:3;1055:67;1119:2;1114:3;1055:67;:::i;:::-;1048:74;;1131:93;1220:3;1131:93;:::i;:::-;1249:2;1244:3;1240:12;1233:19;;892:366;;;:::o;1264:118::-;1351:24;1369:5;1351:24;:::i;:::-;1346:3;1339:37;1264:118;;:::o;1388:210::-;1475:4;1513:2;1502:9;1498:18;1490:26;;1526:65;1588:1;1577:9;1573:17;1564:6;1526:65;:::i;:::-;1388:210;;;;:::o;1604:419::-;1770:4;1808:2;1797:9;1793:18;1785:26;;1857:9;1851:4;1847:20;1843:1;1832:9;1828:17;1821:47;1885:131;2011:4;1885:131;:::i;:::-;1877:139;;1604:419;;;:::o;2029:775::-;2262:4;2300:3;2289:9;2285:19;2277:27;;2314:71;2382:1;2371:9;2367:17;2358:6;2314:71;:::i;:::-;2395:72;2463:2;2452:9;2448:18;2439:6;2395:72;:::i;:::-;2477;2545:2;2534:9;2530:18;2521:6;2477:72;:::i;:::-;2559;2627:2;2616:9;2612:18;2603:6;2559:72;:::i;:::-;2641:73;2709:3;2698:9;2694:19;2685:6;2641:73;:::i;:::-;2724;2792:3;2781:9;2777:19;2768:6;2724:73;:::i;:::-;2029:775;;;;;;;;;:::o;2891:169::-;2975:11;3009:6;3004:3;2997:19;3049:4;3044:3;3040:14;3025:29;;2891:169;;;;:::o;3066:96::-;3103:7;3132:24;3150:5;3132:24;:::i;:::-;3121:35;;3066:96;;;:::o;3168:90::-;3202:7;3245:5;3238:13;3231:21;3220:32;;3168:90;;;:::o;3264:126::-;3301:7;3341:42;3334:5;3330:54;3319:65;;3264:126;;;:::o;3396:77::-;3433:7;3462:5;3451:16;;3396:77;;;:::o;3602:117::-;3711:1;3708;3701:12;3725:175;3865:27;3861:1;3853:6;3849:14;3842:51;3725:175;:::o;3906:122::-;3979:24;3997:5;3979:24;:::i;:::-;3972:5;3969:35;3959:63;;4018:1;4015;4008:12;3959:63;3906:122;:::o;4034:::-;4107:24;4125:5;4107:24;:::i;:::-;4100:5;4097:35;4087:63;;4146:1;4143;4136:12;4087:63;4034:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "197800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Aspirated(address,uint256)": "infinite",
								"pr()": "infinite"
							},
							"internal": {
								"restartReserve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 728,
									"end": 2315,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1488,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1479,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1472,
									"end": 1479,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1472,
									"end": 1488,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1498,
									"end": 1500,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1498,
									"end": 1509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1498,
									"end": 1509,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1513,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1513,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1513,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1513,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1542,
									"end": 1543,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1524,
									"end": 1526,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1524,
									"end": 1539,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1539,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1543,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1571,
									"end": 1572,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1554,
									"end": 1556,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1554,
									"end": 1568,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1554,
									"end": 1568,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1572,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1572,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1572,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1554,
									"end": 1572,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1598,
									"end": 1599,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1583,
									"end": 1585,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1583,
									"end": 1595,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1583,
									"end": 1595,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1599,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1599,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1599,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1583,
									"end": 1599,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1630,
									"end": 1631,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1610,
									"end": 1627,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1610,
									"end": 1627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1631,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1631,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1631,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1631,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1664,
									"end": 1665,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1642,
									"end": 1644,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1642,
									"end": 1661,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1642,
									"end": 1661,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1665,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1665,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1665,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1642,
									"end": 1665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1743,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 728,
									"end": 2315,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220508d0428ee77e9d84373e5dcc13af390789356beacfdb353d0c532ca9f50f8fb64736f6c63430008070033",
									".code": [
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "1509C42A"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "46F188E4"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 728,
											"end": 2315,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1908,
											"end": 1912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2237,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2233,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2223,
											"end": 2244,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2202,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1960,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1927,
											"end": 1981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2012,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2021,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1995,
											"end": 2021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2054,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2043,
											"end": 2054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 2061,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 365,
											"end": 371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 422,
											"end": 424,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 401,
											"end": 408,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 397,
											"end": 420,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 393,
											"end": 425,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 390,
											"end": 509,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 390,
											"end": 509,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 428,
											"end": 507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 390,
											"end": 509,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 390,
											"end": 509,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 548,
											"end": 549,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 618,
											"end": 625,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 609,
											"end": 615,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 598,
											"end": 607,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 594,
											"end": 616,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 573,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 573,
											"end": 626,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 563,
											"end": 626,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 563,
											"end": 626,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 519,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 675,
											"end": 677,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 746,
											"end": 753,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 726,
											"end": 735,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 722,
											"end": 744,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 691,
											"end": 754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 691,
											"end": 754,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 646,
											"end": 764,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 297,
											"end": 771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 297,
											"end": 771,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 297,
											"end": 771,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 777,
											"end": 886,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 886,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 858,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 873,
											"end": 878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 858,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 858,
											"end": 879,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 858,
											"end": 879,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 858,
											"end": 879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 853,
											"end": 856,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 846,
											"end": 880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 777,
											"end": 886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 886,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 777,
											"end": 886,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 892,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 892,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1034,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1119,
											"end": 1121,
											"name": "PUSH",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1114,
											"end": 1117,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1055,
											"end": 1122,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1055,
											"end": 1122,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1055,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1122,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1122,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1220,
											"end": 1223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1131,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1131,
											"end": 1224,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1224,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1131,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1244,
											"end": 1247,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1240,
											"end": 1252,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1233,
											"end": 1252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 892,
											"end": 1258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 892,
											"end": 1258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 892,
											"end": 1258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 892,
											"end": 1258,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1264,
											"end": 1382,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1264,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1369,
											"end": 1374,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1351,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1351,
											"end": 1375,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1375,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1351,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1346,
											"end": 1349,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1339,
											"end": 1376,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1382,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1382,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1388,
											"end": 1598,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1388,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1502,
											"end": 1511,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1588,
											"end": 1589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1564,
											"end": 1570,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1526,
											"end": 1591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1526,
											"end": 1591,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1526,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1598,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1598,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1598,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1604,
											"end": 2023,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1604,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1770,
											"end": 1774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1810,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1793,
											"end": 1811,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1811,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1857,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1855,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2011,
											"end": 2015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1885,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1885,
											"end": 2016,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1885,
											"end": 2016,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1885,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 2016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 2016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 2023,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 2023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 2023,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2262,
											"end": 2266,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2303,
											"name": "PUSH",
											"source": 2,
											"value": "C0"
										},
										{
											"begin": 2289,
											"end": 2298,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2285,
											"end": 2304,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2382,
											"end": 2383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2380,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2367,
											"end": 2384,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2314,
											"end": 2385,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2314,
											"end": 2385,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2314,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2439,
											"end": 2445,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2395,
											"end": 2467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2395,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2395,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2545,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2548,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2477,
											"end": 2549,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2477,
											"end": 2549,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2477,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2616,
											"end": 2625,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2603,
											"end": 2609,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2559,
											"end": 2631,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2559,
											"end": 2631,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2559,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2709,
											"end": 2712,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2694,
											"end": 2713,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2685,
											"end": 2691,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2641,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2641,
											"end": 2714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2641,
											"end": 2714,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2641,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2792,
											"end": 2795,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 2781,
											"end": 2790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2796,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2724,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2724,
											"end": 2797,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2724,
											"end": 2797,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2724,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2029,
											"end": 2804,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2891,
											"end": 3060,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2891,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 2986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3009,
											"end": 3015,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3007,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3049,
											"end": 3053,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3044,
											"end": 3047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3040,
											"end": 3054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3060,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3060,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3060,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 3060,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3066,
											"end": 3162,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3066,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3150,
											"end": 3155,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3132,
											"end": 3156,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3132,
											"end": 3156,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3132,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3066,
											"end": 3162,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3168,
											"end": 3258,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3168,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3202,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3238,
											"end": 3251,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3231,
											"end": 3252,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3220,
											"end": 3252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3168,
											"end": 3258,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3264,
											"end": 3390,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3264,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3301,
											"end": 3308,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3334,
											"end": 3339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3384,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3319,
											"end": 3384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3390,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3390,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3390,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3396,
											"end": 3473,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3396,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3451,
											"end": 3467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3451,
											"end": 3467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3473,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3396,
											"end": 3473,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3602,
											"end": 3719,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3602,
											"end": 3719,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3725,
											"end": 3900,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3725,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3892,
											"name": "PUSH",
											"source": 2,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732E00000000000000"
										},
										{
											"begin": 3861,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3863,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3893,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3725,
											"end": 3900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3725,
											"end": 3900,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3906,
											"end": 4028,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3906,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3997,
											"end": 4002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3979,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3972,
											"end": 3977,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3969,
											"end": 4004,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 4022,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3959,
											"end": 4022,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4016,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4008,
											"end": 4020,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3959,
											"end": 4022,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3959,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3906,
											"end": 4028,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3906,
											"end": 4028,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4034,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4034,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4125,
											"end": 4130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4107,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4107,
											"end": 4131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4107,
											"end": 4131,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4107,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4097,
											"end": 4132,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4087,
											"end": 4150,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4146,
											"end": 4147,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4144,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4136,
											"end": 4148,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4150,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4087,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4034,
											"end": 4156,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Aspirated(address,uint256)": "46f188e4",
							"pr()": "1509c42a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Aspirated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"AllPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StoragePower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StaticPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"FlowPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"AspiratedPower\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"SalvationalPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sun5.0/sun.sol\":\"SUN\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sun5.0/safemath.sol\":{\"keccak256\":\"0x46b3dcb24f0450aaa98e27effca017e7ebe3bc8bb83a062c5d0eef491a106bd9\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://75f1661dc6ea3a3573931d3a2c80f68b61e791e3a601ef76f1ec343f985796f3\",\"dweb:/ipfs/QmVk6n7UNYGT5Kr4UPgcRufAVRA6Uv7NnKntz1gjPp7Sfz\"]},\"sun5.0/sun.sol\":{\"keccak256\":\"0x3a77606f875e07964a3cd9e8362600dca494d930934aad0dd60bc7657197dc39\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f78e9a0063fcf23de7b590f36056b8169723d8beed0227a6197a093b2b9a7f2f\",\"dweb:/ipfs/QmQUrXvfbLM6aWFHfexFb7xbhd2SvNykfpa6Q9C7ZneKhX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 170,
								"contract": "sun5.0/sun.sol:SUN",
								"label": "manager",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 173,
								"contract": "sun5.0/sun.sol:SUN",
								"label": "pr",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(PowerReserve)165_storage"
							},
							{
								"astId": 175,
								"contract": "sun5.0/sun.sol:SUN",
								"label": "AccumulatePower",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_struct(PowerReserve)165_storage": {
								"encoding": "inplace",
								"label": "struct SUN.PowerReserve",
								"members": [
									{
										"astId": 154,
										"contract": "sun5.0/sun.sol:SUN",
										"label": "AllPower",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 156,
										"contract": "sun5.0/sun.sol:SUN",
										"label": "StoragePower",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 158,
										"contract": "sun5.0/sun.sol:SUN",
										"label": "StaticPower",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 160,
										"contract": "sun5.0/sun.sol:SUN",
										"label": "FlowPower",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 162,
										"contract": "sun5.0/sun.sol:SUN",
										"label": "AspiratedPower",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 164,
										"contract": "sun5.0/sun.sol:SUN",
										"label": "SalvationalPower",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> sun5.0/sun.sol:47:5:\n   |\n47 |     constructor(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1743,
					"file": "sun5.0/sun.sol",
					"start": 1417
				},
				"type": "Warning"
			}
		],
		"sources": {
			"sun5.0/safemath.sol": {
				"ast": {
					"absolutePath": "sun5.0/safemath.sol",
					"exportedSymbols": {
						"SafeMath": [
							127
						]
					},
					"id": 128,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 127,
							"linearizedBaseContracts": [
								127
							],
							"name": "SafeMath",
							"nameLocation": "78:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "164:137:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 10,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "178:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "183:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "178:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 16,
												"nodeType": "IfStatement",
												"src": "174:45:0",
												"trueBody": {
													"id": 15,
													"nodeType": "Block",
													"src": "186:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 13,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "207:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 9,
															"id": 14,
															"nodeType": "Return",
															"src": "200:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "238:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 33,
														"src": "230:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 22,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 19,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "242:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 20,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "246:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "242:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "230:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 24,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "265:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 25,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "269:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "265:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 27,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "274:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "265:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "257:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "257:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "257:19:0"
											},
											{
												"expression": {
													"id": 31,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 18,
													"src": "293:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 9,
												"id": 32,
												"nodeType": "Return",
												"src": "286:8:0"
											}
										]
									},
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "106:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "118:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "110:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "129:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "121:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "109:22:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "155:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 7,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:9:0"
									},
									"scope": 127,
									"src": "97:204:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "376:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 44,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "394:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "398:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "394:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "386:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "386:14:0"
											},
											{
												"assignments": [
													50
												],
												"declarations": [
													{
														"constant": false,
														"id": 50,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "418:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 57,
														"src": "410:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 49,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 51,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "422:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 52,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "426:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "422:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "410:17:0"
											},
											{
												"expression": {
													"id": 55,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 50,
													"src": "444:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 56,
												"nodeType": "Return",
												"src": "437:8:0"
											}
										]
									},
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "318:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "330:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "322:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "333:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:22:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "367:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:9:0"
									},
									"scope": 127,
									"src": "309:143:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "527:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 68,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "545:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 69,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 60,
																"src": "550:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "545:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "537:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "537:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "537:15:0"
											},
											{
												"assignments": [
													74
												],
												"declarations": [
													{
														"constant": false,
														"id": 74,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "570:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 81,
														"src": "562:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 73,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "562:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 78,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 75,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "574:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 76,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 62,
														"src": "578:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "574:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "562:17:0"
											},
											{
												"expression": {
													"id": 79,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 74,
													"src": "598:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 66,
												"id": 80,
												"nodeType": "Return",
												"src": "591:8:0"
											}
										]
									},
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "469:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "481:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "473:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "492:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "484:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:22:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "518:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:9:0"
									},
									"scope": 127,
									"src": "460:146:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "681:79:0",
										"statements": [
											{
												"assignments": [
													92
												],
												"declarations": [
													{
														"constant": false,
														"id": 92,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "699:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 105,
														"src": "691:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 91,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 93,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "703:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 94,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "707:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "703:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "691:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 98,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "726:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 99,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "731:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "726:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 97,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "718:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "718:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "718:15:0"
											},
											{
												"expression": {
													"id": 103,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 92,
													"src": "752:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 90,
												"id": 104,
												"nodeType": "Return",
												"src": "745:8:0"
											}
										]
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "623:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "635:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "627:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "646:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "638:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "626:22:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "672:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:9:0"
									},
									"scope": 127,
									"src": "614:146:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "837:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "855:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "860:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "855:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "847:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "847:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "847:15:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 121,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "879:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 122,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "883:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "879:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 124,
												"nodeType": "Return",
												"src": "872:12:0"
											}
										]
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "779:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "791:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "783:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "802:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "794:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:22:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "828:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:9:0"
									},
									"scope": 127,
									"src": "770:121:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 128,
							"src": "70:823:0",
							"usedErrors": []
						}
					],
					"src": "0:893:0"
				},
				"id": 0
			},
			"sun5.0/sun.sol": {
				"ast": {
					"absolutePath": "sun5.0/sun.sol",
					"exportedSymbols": {
						"SUN": [
							271
						],
						"SafeMath": [
							127
						]
					},
					"id": 272,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 129,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "670:31:1"
						},
						{
							"absolutePath": "sun5.0/safemath.sol",
							"file": "./safemath.sol",
							"id": 130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 272,
							"sourceUnit": 128,
							"src": "703:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 271,
							"linearizedBaseContracts": [
								271
							],
							"name": "SUN",
							"nameLocation": "737:3:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SUN.Participant",
									"id": 141,
									"members": [
										{
											"constant": false,
											"id": 132,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "809:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 141,
											"src": "802:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 131,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "802:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 134,
											"mutability": "mutable",
											"name": "pAddress",
											"nameLocation": "831:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 141,
											"src": "823:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 133,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "823:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 136,
											"mutability": "mutable",
											"name": "rAddress",
											"nameLocation": "857:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 141,
											"src": "849:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 135,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "849:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 140,
											"mutability": "mutable",
											"name": "Pandoras",
											"nameLocation": "885:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 141,
											"src": "875:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Pandora_$152_storage_$dyn_storage_ptr",
												"typeString": "struct SUN.Pandora[]"
											},
											"typeName": {
												"baseType": {
													"id": 138,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 137,
														"name": "Pandora",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 152,
														"src": "875:7:1"
													},
													"referencedDeclaration": 152,
													"src": "875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Pandora_$152_storage_ptr",
														"typeString": "struct SUN.Pandora"
													}
												},
												"id": 139,
												"nodeType": "ArrayTypeName",
												"src": "875:9:1",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Pandora_$152_storage_$dyn_storage_ptr",
													"typeString": "struct SUN.Pandora[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Participant",
									"nameLocation": "781:11:1",
									"nodeType": "StructDefinition",
									"scope": 271,
									"src": "774:126:1",
									"visibility": "public"
								},
								{
									"canonicalName": "SUN.Pandora",
									"id": 152,
									"members": [
										{
											"constant": false,
											"id": 143,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "935:2:1",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "929:8:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 142,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "929:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 145,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "955:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "947:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 144,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "947:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 147,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "978:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "970:13:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 146,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "970:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 149,
											"mutability": "mutable",
											"name": "tOn",
											"nameLocation": "1001:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "993:11:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 148,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "993:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 151,
											"mutability": "mutable",
											"name": "state",
											"nameLocation": "1021:5:1",
											"nodeType": "VariableDeclaration",
											"scope": 152,
											"src": "1014:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 150,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1014:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pandora",
									"nameLocation": "912:7:1",
									"nodeType": "StructDefinition",
									"scope": 271,
									"src": "905:154:1",
									"visibility": "public"
								},
								{
									"canonicalName": "SUN.PowerReserve",
									"id": 165,
									"members": [
										{
											"constant": false,
											"id": 154,
											"mutability": "mutable",
											"name": "AllPower",
											"nameLocation": "1101:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "1093:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 153,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1093:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 156,
											"mutability": "mutable",
											"name": "StoragePower",
											"nameLocation": "1134:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "1126:20:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 155,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1126:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 158,
											"mutability": "mutable",
											"name": "StaticPower",
											"nameLocation": "1170:11:1",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "1162:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 157,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1162:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 160,
											"mutability": "mutable",
											"name": "FlowPower",
											"nameLocation": "1205:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "1197:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 159,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1197:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 162,
											"mutability": "mutable",
											"name": "AspiratedPower",
											"nameLocation": "1237:14:1",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "1229:22:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 161,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1229:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 164,
											"mutability": "mutable",
											"name": "SalvationalPower",
											"nameLocation": "1274:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "1266:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 163,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1266:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PowerReserve",
									"nameLocation": "1071:12:1",
									"nodeType": "StructDefinition",
									"scope": 271,
									"src": "1064:238:1",
									"visibility": "public"
								},
								{
									"id": 168,
									"libraryName": {
										"id": 166,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 127,
										"src": "1313:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "1307:27:1",
									"typeName": {
										"id": 167,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1326:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 170,
									"mutability": "mutable",
									"name": "manager",
									"nameLocation": "1347:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 271,
									"src": "1339:15:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 169,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1339:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "1509c42a",
									"id": 173,
									"mutability": "mutable",
									"name": "pr",
									"nameLocation": "1380:2:1",
									"nodeType": "VariableDeclaration",
									"scope": 271,
									"src": "1360:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_PowerReserve_$165_storage",
										"typeString": "struct SUN.PowerReserve"
									},
									"typeName": {
										"id": 172,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 171,
											"name": "PowerReserve",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 165,
											"src": "1360:12:1"
										},
										"referencedDeclaration": 165,
										"src": "1360:12:1",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_PowerReserve_$165_storage_ptr",
											"typeString": "struct SUN.PowerReserve"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 175,
									"mutability": "mutable",
									"name": "AccumulatePower",
									"nameLocation": "1396:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 271,
									"src": "1388:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 174,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1388:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "1462:281:1",
										"statements": [
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "manager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 170,
														"src": "1472:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 181,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "1482:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1472:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1472:16:1"
											},
											{
												"expression": {
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 184,
															"name": "pr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1498:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PowerReserve_$165_storage",
																"typeString": "struct SUN.PowerReserve storage ref"
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "AllPower",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 154,
														"src": "1498:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1512:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1498:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "1498:15:1"
											},
											{
												"expression": {
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 190,
															"name": "pr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1524:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PowerReserve_$165_storage",
																"typeString": "struct SUN.PowerReserve storage ref"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "StoragePower",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 156,
														"src": "1524:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1542:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1524:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "1524:19:1"
											},
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 196,
															"name": "pr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1554:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PowerReserve_$165_storage",
																"typeString": "struct SUN.PowerReserve storage ref"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "StaticPower",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 158,
														"src": "1554:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1571:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1554:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1554:18:1"
											},
											{
												"expression": {
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 202,
															"name": "pr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1583:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PowerReserve_$165_storage",
																"typeString": "struct SUN.PowerReserve storage ref"
															}
														},
														"id": 204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "FlowPower",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 160,
														"src": "1583:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1598:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1583:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "1583:16:1"
											},
											{
												"expression": {
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 208,
															"name": "pr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1610:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PowerReserve_$165_storage",
																"typeString": "struct SUN.PowerReserve storage ref"
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "AspiratedPower",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 162,
														"src": "1610:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1630:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1610:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "1610:21:1"
											},
											{
												"expression": {
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 214,
															"name": "pr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1642:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PowerReserve_$165_storage",
																"typeString": "struct SUN.PowerReserve storage ref"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "SalvationalPower",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 164,
														"src": "1642:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1664:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1642:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "1642:23:1"
											}
										]
									},
									"id": 221,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "1446:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "1438:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:25:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1462:0:1"
									},
									"scope": 271,
									"src": "1417:326:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "1798:16:1",
										"statements": []
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "restartReserve",
									"nameLocation": "1757:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:2:1"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1792:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 223,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1792:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1791:6:1"
									},
									"scope": 271,
									"src": "1748:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "1913:148:1",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "toAddress_address",
														"nameLocation": "1943:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 253,
														"src": "1927:33:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1927:15:1",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"arguments": [
														{
															"id": 242,
															"name": "toAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "1971:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1963:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 240,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1963:8:1",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1927:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 248,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "2022:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 245,
															"name": "toAddress_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "1995:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "1995:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1995:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1995:34:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2050:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 252,
												"nodeType": "Return",
												"src": "2043:11:1"
											}
										]
									},
									"functionSelector": "46f188e4",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 233,
												"name": "onlyManager",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 270,
												"src": "1880:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1880:11:1"
										}
									],
									"name": "Aspirated",
									"nameLocation": "1828:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "toAddress",
												"nameLocation": "1846:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1838:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1864:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1856:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:34:1"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1908:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1908:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:6:1"
									},
									"scope": 271,
									"src": "1819:242:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "2094:16:1",
										"statements": []
									},
									"id": 258,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:2:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2094:0:1"
									},
									"scope": 271,
									"src": "2067:43:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2191:122:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 261,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2223:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2223:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 263,
																"name": "manager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "2237:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2223:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732e",
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2258:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572",
																"typeString": "literal_string \"Only owner can call this.\""
															},
															"value": "Only owner can call this."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_093ac7956fbad33883c573a6405a2a1f477e8ad368de983983d3f8a1bdd8c572",
																"typeString": "literal_string \"Only owner can call this.\""
															}
														],
														"id": 260,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2202:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2202:93:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "2202:93:1"
											},
											{
												"id": 268,
												"nodeType": "PlaceholderStatement",
												"src": "2305:1:1"
											}
										]
									},
									"id": 270,
									"name": "onlyManager",
									"nameLocation": "2177:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2188:2:1"
									},
									"src": "2168:145:1",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 272,
							"src": "728:1587:1",
							"usedErrors": []
						}
					],
					"src": "670:1645:1"
				},
				"id": 1
			}
		}
	}
}